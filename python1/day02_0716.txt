day02 23.07.16
- 복습
- 기본자료형
- 연산자

0. 복습
	컴퓨터 = 하드웨어 + 소프트웨어
	컴퓨터 언어 = 저급언어 / 고급언어
	번역프로그램
		python : 인터프리터
		c, java : 컴파일러
	
	python 특징
		인터프리터 언어
		완전 객체지향언어
		불러다 쓸 수 있는 모듈 많음
	
	python 기본 문법
	함수	이름뒤에()
		어떠한 기능을 한다
	출력함수	print()
		sep = ' '	/ end = '\n'
	주석	#
		'''~''', """~"""
	변수	값을 저장하는 저장공간
		변수명 = 값
		변수명
	
1. 기본자료형
			Data Type	의미
	숫자자료형		int		정수
	숫자자료형		float		실수
	논리자료형		bool		참(True)/거짓(False)
	문자열자료형	str		"",''

print() -> 소괄호안에 있는 값을 출력하낟
int() -> 소괄호안에 있는 값을 정수형 데이터로 변환 가능

1) 정수형(int)
	int() 함수를 이용하면 다른 자료형의 값을 정수형 데이터로 변환 가능

2) 실수형(float)
	float() 함수를 이용하면 다른 자료형의 값을 실수형 데이터로 변환 가능

3) 논리형(bool)
	bool() 함수를 이용하면 다른 자료형의 값을 논리형 데이터로 변환 가능
	값이 있을 때 True, 1
	값이 없을 때 False, 0, "", [], {}, ()

4) 문자열 자료형(str)
	문자열 '', "", "python", '안녕', '5'
	*시퀀스 자료형
	특정자료만 추출가능 -> 인덱싱, 슬라이싱 : 인덱스 번호를 이용하여 사용 가능
	인덱싱(indexing)
		문자열을 구성하는 모든 문자에 부여한 고유번호(인덱스)
		인덱스의 시작번호는 앞에서부터 0부터 시작
		마이너스 인덱스 시작번호는 뒤에서부터 -1부터 시작
		특정문자를 추출하고자 할 때 사용

		변수명[인덱스번호 or 마이너스인덱스번호]

	슬라이싱(slicing)

		문자열의 인덱스를 활용해서 한 문자 이상 구성된 단어나 문자 추출

		변수명[start : stop : step]
		변수명[시작인덱스:종료인덱스:스텝값]
 
	시퀀스 연산자
		시퀀스 자료형에서 사용할 수 있는 연산자
		문자열 + 문자열 => 연결
		ex) 'h' + 'i' = 'hi'

		문자열 * 정수형  => 반복
		data = "hello"
		data * 5 => hellohellohellohellohello

2. 입력함수 : input()
	키보드로부터 입력받기 위한 입력함수
	str 자료형으로 저장된다
	*** 다른 자료형을 입력하고 싶을 때는 반드시 형 변환을 해줘야한다! ***

3. 이스케이프 문자
	문자열 안에서 특수한 기능을 하는 문자
	\' : '를 표현한다
	\" : "를 표현한다
	\\ : \를 표현한다
	\n : 줄바꿈(엔터)을 의미한다
	\t : tab을 표현한다
	ex) end = '\n' (줄바꿈)

	이스케이프 문자를 사용하는 이유
		문자열 사이에 '', ""가 들어가는 경우(강조)
		출력할 때 줄바꿈이 아닌 tabz키를 띄어쓰기로 사용하는 경우

4. 형식을 갖춘 문자열
	% 연산자
		형식	지정자
	int	%d	print('숫자는 %d입니다' %10)	
	float	%f	print('숫자는 %f입니다' %3.14)
	bool	%s	print('참은 %s입니다' %True)
	str	%s	print('문자열은 %s입니다' %"문자열")

2) str.format()
	'문자열{}'.foramt(값)
	번호를 부여할 수 있고 별명도 설정 가능함

3) f-string()
	f"문자열 {변수명 or 값}"
	따로 값을 넘겨줄 필요없이 알아서 변수에 저장된 겂을 중괄호 안으로 가져옴

5. 연산자
	연산자의 우선순위
		최우선	. ()
		단항	-, +, !
		산술	+, -, *, /, //, %, **
		쉬프트(비트연산)
		관계	>, <, >=, <=, ==, !=
		논리	and, or, not
		삼항	참 일 때의 값 if 조건식 else 거짓일 때의 값
		대입연산자	=













