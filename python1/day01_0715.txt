day01 23.07.15
- OT
- 파이썬
- 파이썬 기본문법

단축키
- 새폴더 : ctrl + shift + n
- 이름 바꾸기 : F2
- 들여쓰기 : Tab
- 글꼴 변경 : ctrl + 마우스 스크롤(위아래)

OT
1) 기본
	과목 : 파이썬 기초
	강사이름 : 김영선 강사
	교재 : 멘토씨리즈 파이썬(보충교재 용도)
	메일 : yskim8516@gmail.com
	- 메일제목 : [강남] 주말 파이썬 본인이름 (제목통일)
	- 본문내용 : 어떤 의도를 가지고 어떤 코드를 작성했는데 어떤 에러가 난다 (자세히 기재)
		> 다른 개발도구 사용시 : 코드내용 그대로 복+붙/결과화면 : 이미지캡처
		> 구글 코랩 사용시 : 코랩 링크로 전달(코랩 파일에 본인이름)
2) 수업일정 
	수업시간 : 07/15 ~ 08/06
		4h -> 50분 수업, 10분 휴식
		결석, 지각 xxx
	수업방식 : 대면 + 비대면
		대면 고정좌석
	이론 및 설명(메모장) -> 예제 -> 실습 -> 과제
	과제풀이, 복습 -> 이론 및 설명(메모장) -> 예제 -> 실습 -> 과제

	수업 자료 제공 : 오픈 카카오 채팅방
		- 수업 중간에 코드 및 메모장 내용 제공
		- 수업 자료 제공(메모장, 코랩링크 첨부)
3) 지켜야할 사항
	개념 이해에 집중
	수업 시간에 배운 내용 복습
	적극적인 수업참여
	기본 예의 - 단톡방(9:00 ~ 19:00)
-----------------------------------------------------------------------------
기본지식
1) 컴퓨터 -> 하드웨어(HW) : 마우스, 키보드, 모니터, cpu, 메모리 ....
	   소프트웨어(SW) : 게임, 음악, 인터넷서핑, 계산기 ....

	하드웨어(Hard Ware) 물리적으로 만질 수 있는 것
	소프트웨어 (Soft ware) 논리적이며 형태가 있지 않음

	하드웨어 입출력장치 드을 통해 그 형태를 볼 수 있음

	응용프로그램(소프트웨어)
	운영체제(OS)
	하드웨어
	
2) 컴퓨터 언어(프로그래밍 언어)를 나누는 과정
	저급언어(LOW-level Language) : 컴퓨터가 사용하는 언어에 가까울수록
				(2진수체계, 0과 1) 저급프로그래밍 언어(저수준언어)
	고급언어(High-level Language) : 사람이 일상적으로 사용하는 언어에 가까울수록 
				고급프로그램 언어(고수준언어)

3) 번역프로그램
	컴파일러(통번역) - C, Java
	프로그램을 실행하기 전에 컴파일이라는 변환작업이 필요한 프로그래밍 방식
	사람이 작성한 프로그램 언어를 기계어로 변환
	파일을 통으로 번역

	인터프리터(동시번역) - Python
	한 줄씩 번역 

4) 프로그래밍 언어
	절차/객체/함수
	방법/목적 -> 명령형 언어, 선언형언어
	빌드과정유무 -> 컴파일 언어, 인터프리터 언어
	자료형지정여부 -> 동적언어, 정적언어

-----------------------------------------------------------------------------
1. Python
	고급언어
	귀도 반 로섬 1991년 개발한 언어
	인터프리터 언어(대화형 언어)
	완전객체지향언어(<-> 절차지향언어)
		객체지향(java, python) : 클래스라는 틀을 만들고 그 속성을 지닌 객체들을 미리 
				만들어서 객체를 사용해서 코딩하는 것, 수정이 편함
		절처지향(C) : 입력한 순서대로 프로그램이 실행되는 것, 수정이 귀찮음
			인간의 삶의 방식을 개발에 적용시키는 패러다임
      			ex) 사람이 생각하는 방식 그대로 표현할 수 있는 언어
      			if "python" in ["c", "java", "python"]:
			print("python이 있습니다")
			불러다 쓸 수 있는 모듈많음, 하나의 사이트에서 관리함(www.pypi.org)
	
	장점 : 쉽고, 가독성이 높음, 빠른 개발속도, 다른 언어나 라이브러에 쉽게 연동가능
	단점 : 느린 실행속도

2. Python 개발도구
	비주얼스튜디오, 비주얼스튜디오코드, 파이참, 주피터노트북, 구글 코랩 등
	비주얼스튜디오 : 실제 개발자들이 많이 쓰는 개발도구
	주피터노트북 : 오픈소스 웹 어플리케이션으로 데이터 과학분야, 데이터 분석 등 에서 많이 사용
		브라우저에서 실행되며, 코드 실행결과를 포함한 문서 전체를 저장하고 공유가능
	구글코랩 : 구글 클라우드 환경이므로 컴퓨터 사양과 관계없이 인터넷만 연결되면 사용 가능
		주피터 노트북을 기반으로 만들어짐
	
	텍스트 셀 : 설명적기 위한 공간(메모장)
		프로그램 실행에 실질적인 영향을 미치지 않는다
	코드 셀 : 명령어를 입력하는 공간
		셀 단위로 실행한다
	코랩설정(도구  탭 - 편집기)
		들여쓰기 너비(공백개수) 4로 지정
		행번호 표시 체크

3. 파이썬 기본 문법
1) 함수
	이름뒤에 소괄호
	어떠한 기능을 한다

2) print() : 출력함수
	괄호안에 있는 값을 화면에 출력해준다
	,(콤마)로 구분해서 쓰면 여러가지 값을 함께 쓸 수 있다

	python 2.x에서는 print명령에 괄호를 생략 가능
	python 3.x이상에서는 print가 함수로 변경되었기 때문에 반드시 괄호를 사용해야함

3) '~', "~"
	컴퓨터가 명령어가 아닌 문자열 값임을 구분할 수 있게 사용함
	(문자열 : 문자들의 나열)

4) 주석(Comment)
	문장의 뜻을 쉽게 풀이해 놓은 것(설명문)
	프로그램 수행에는 전혀 영향을 미치지 않는다

	- 용도
	프로그램의 개요를 소스코드에 적을 때
	어떤 변수나 로직등에 설명이 필요할 때
	이미 작성한 부분을 실행에 임시로 빼고 싶을 때
	개발자들간의 소통을 위해 사용함
	
	- 사용법
	한줄주석 : #
	범위주석 : '''~''', """~"""(본래용도는 독스트링을 작성하는 용도)
	Docstring 정의 -> https://peps.python.org/pep-0257/
	모듈, 함수, 클래스, 메소드 정의의 첫번재 명령문으로 발생하는 문자열 리터럴

4. 변수
	값을 저장하기 위한 저장공간
	값을 재사용하기 위해서 사용함

   변수명
	저장곤간의 이름

1) 변수의 생성
	변수명 = 값
	ex) name = "이혜림"
		age = 20
		number = 100

	= : 대입연산자
		오른쪽에 있는 값을 왼쪽의 저장공간에 저장해줘

2) 변수의 사용
	변수명
	ex) name, age, number
	print(name) #name에 저장되어있는 값이 출력된다

3) 변수명 작성시 주의사항
	- 띄어쓰기가 불가능하다
	my age = 10 #오류
	myage = 10
	my_age = 10 #스네이크 표기법, 팟홀표기법(소문자로만 구성, 단어가 바뀔 때 _연결)
	myAge = 10 #카멜표기법(소문자로시작, 단어가 바뀔때 첫문자를 대문자로 작성)
	MyAge = 10 #파스칼 표기법(클래스명 만들 때 주로 사용)

	- 특수문자 사용이 불가능하다
	@#$% = 10 #오류
	역할이 부여되어 있기 때문에 사용이 불가능
	단, _(언더바)만 사용가능

	- 숫자로 시작 불가능하다
	1num = 10 #오류
	숫자가 중간이나 끝에 사용하는 것은 가능

	- 키워드는 사용하지 않는다
	각자의 역할이 부여되어있기 때문에 사용 불가능
	ex) if, for, break ...

4) 변수명 작성시 권고사항
	-의미있는 단어를 사용하자
	나이가 10살이다
	a = 10 #나이
	age = 10

	- 소문자로 시작하자
	 ex) age, name, number, data, ... 

5. 기본자료형 (Data Type)
	프로그래밍에서는 프로그램이 처리할 수 있는 모든것을 Data(자료)
	프로그램은 자료를 처리하는 역할을 함

	 	Data Type	의미			예시
	숫자자료형 int		양의정수, 음의정수, 0		10, 15, -100, 0...
	숫자자료형 float		소수점이 있는 수		0.0, 3.14, -53.21...
	논리자료형 bool		True(참), False(거짓)
	문자열자료형 str		문자열			'~', "~"

1) 정수형(int)
	num1 = 3
	print(num1, type(num1)) => 3, 'int'
	num2 = 5.1
	print(int(num2), type(int(num)))

	정수형함수 int() 다른 자료형의 값을 정수형 데이터로 변환 가능















