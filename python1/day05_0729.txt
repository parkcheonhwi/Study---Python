day05
과제풀이 -> 컬렉션2

1. 컬렉션 메소드
   list   : 시퀀스자료형, 중복값 허용, 추가수정삭제가능
   tuple   : 시퀀스자료형, 중복값 허용, 읽기전용리스트
   set   : 비시퀀스자료형, 중복값 허용하지않음, 추가삭제가능
   dict    : 비시퀀스자료형, key:value, key 중복값 허용하지않음
               value 중복값 허용

0) 함수와 메소드
함수   특정 객체에 속해있지 않는 것을 의미함
   함수명 뒤에 소괄호
   함수명()
   ex) print(), input(), range(), ..
   함수의 값을 다른 변수에 대입 가능
   ex) num = int(input())
       data = print("안녕") (x) print(data) => None

메소드
   특정 객체와 함께 지정되어야함
   특정 객체에 속해있는 함수
   객체명.메소드명()

함수와 메소드의 차이점
   함수는 단독으로 사용
   메소드는 객체 뒤에 .붙여서 사용

1) 리스트
   시퀀스자료형
   중복값 허용
   추가, 수정, 삭제가 언제나 가능

(1)리스트 생성
   변수명 = 값
   리스트명 = [값1, 값2, [값1, 값, 값3]]
   
- 비어있는 리스트 생성
   리스트명 = []
   리스트명 = list()
(2) 리스트 요소에 접근하기
	인덱스 연산자[]와 인덱스 번호 활용
	리스트명[인덱스 번호]
	*인덱스 번호는 앞에서부터 0부터 시작
	* 마이너스 인덱스번호는 뒤에서부터 -1부터 시작

	리스트명[idx1:idx2]
	idx1번 인덱스부터 idx2-1번 인덱스까지 잘라줌
	리스트명[idx:]
	idx1번 인덱스부터 끝까지
	리스트명[:idx2]
	처음부터 idx2-1까지
(3) 리스트 요소값 수정하기
	=(대입연산자)가 사용되면 왼쪽은 저장공간으로 활용

	num1=1
	num1=10

	li=[10,20,30]
	print(li[0]) #10

(4) 리스트 메소드
   어떤리스트에 적용시킬 것인지 소속을 알려줘야함
   리스트명.메소드명()

   .append(값) : 값을 리스트의 맨 뒤에 추가
   .insert(idx, 값) : 값을 해당 idx에 추가
   .remove(값) : 값을 삭제, 값이 없을경우 오류발생
   .pop(idx) : idx의 요소를 삭제, idx 없을 경우 오류 발생
   .extend(리스트) : 리스트와 다른 리스트를 연결해준다( + 연산자와는 다름!!)
   .sort() : 요소를 오름차순 정렬해준다(리스트 자체를 내부적으로 정렬)
   .sort(reverse = True) : 요소를 내림차순 정렬해준다
   .reverse() : 요소를 반대순서대로 출력

   len() : 리스트의 길이(요소의 개수) 알려줌
   max() : 리스트의 최대값 알려줌
   min() : 리스트의 최소값 알려줌
   sum() : 리스트의 합계를 알려줌

2) 튜플
	시퀀스 자료형
	중복값 허용
	값의 추가나 수정이 불가능함
	리스트와 유사하지만 읽기전용 리스트
(1) 튜플의 생성
	튜플명=(값1, 값2, (값1,값2))
	튜플명=(값1,)
- 비어있는 튜플의 생성
	튜플명=()
	 튜플명=tuple()

(2) 튜플 요소 접근하기
	시퀀스 자료형이기 때문에 리스트와 동일
	단, 튜플은 수정이 불가능
(3) 튜플의 메솓
	.count(값): 해당 값이 몇 개있는지 확인
	.index(값): 해당 값의 인덱스 번호를 확인
		값에 중복이 있다면 맨 앞에 요소 인덱스번호를 알려줌

3) 세트(set)
   비시퀀스자료형
   중복된 값을 허용하지 않음
   추가가 가능

(1) 세트의 생성
   세트명 = {값1, 값2, 값3..}

    비어있는 세트의 생성
   세트명 = set()

(2) 세트의 메소드
   .add(값) : 값을 추가한다. 중복된 값은 추가가 되지 않음
   .remove(값) : 값을 삭제한다. 없는 요소를 넣게 되면 오류 발생
   .discard(값) : 값을 삭제한다. 없는 요소를 넣어도 오류 발생하지 않음
   .pop() : 요소를 삭제한다. 생략시 맨 앞에 있는 요소가 삭제됨
      * 인덱스로는 사용 불가


4) 딕셔너리
   비시퀀스 자료형
   key와 value가 항상 한쌍으로 저장됨
   key 값 중복 불가능함

(1) 딕셔너리 생성
   딕셔너리명 = {키1:값1, 키2:[값2, 값1]}
   
    비어있는 딕셔너리 생성
   딕셔너리명 = {}
   딕셔너리명 = dict()

(2) 딕셔너리 값 수정하기
   딕셔너리명['key'] = 값