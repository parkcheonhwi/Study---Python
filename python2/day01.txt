day01
오리엔테이션 -> python 총복습

1일차 수업예제링크
https://colab.research.google.com/drive/1tYigTuo90Zwa5EwMacIEG_GaXF-FMMaQ?usp=sharing

파일탐색기 열기 : window + e
새폴더 만들기 : ctrl + shift + n
이름바꾸기 : F2

메모장 단축키
글씨 크기 변경 : ctrl + 마우스 휠(위/아래)
일정 간격 들여쓰기 : tab
-------------------------------------------------------
1. 오리엔테이션
1) 강사소개
	강사명 : 김영선강사
	과목명 : 파이썬 자료구조
	교재 : 멘토씨리즈 파이썬
	메일주소 : yskim8516@gmail.com
	메일제목 : 파이썬 자료구조 0930 본인이름
	본문내용 : 코랩 > 링크 공유
		다른 개발도구 > 소스코드내용 + 결과화면 이미지 캡처
		어떤 의도를 가지고 어떤 코드를 작성했는지,
		원하는 결과가 어떤 것인지를 기재
		
		정답을 바로 알려드리지 않는다!
	why? 코드해석능력과 문제 해결 능력을 키워야하기 때문에
	
2) 수업일정
	수업시간 : 8/12, 8/13, 8/19, 8/20, 8/26, 8/27, 9/2, 9/3	
		4h => 50분 수업, 10분 휴식
		4h * 8일 = 32h
		※ 휴강일 없음!!(결석, 지각 하지않기)

	수업방식 : 대면 + 비대면
		대면 고정좌석!!
		대면왔다가 비대면으로 전환시 다른사람이 앉을 수 있음
		영상은 외부 유출금지!! 개인 공부용으로만 소장
		
	이론 및 설명(메모장) -> 예제 -> 실습(과제)
	
	수업자료 제공
		오픈카카오채팅창
			- 수업시간에 작성한 메모장, 코드 그때 그때 공유
			- 수업 끝난후 메모장(코랩링크 첨부) 전달
			- 과제

3) 수강생이 지켜야 할 사항
1. 개념 이해에 집중하자
	
2. 복습을 꼭 하자

3. 단톡방은 모두 함께 사용하는 공간
	사용시간 09:00 ~ 20:00

4. 수업에 적극적으로 참여
	
-------------------------------------------------------------

2. python 총복습
파이썬 문법
1) 주석(comment)
	문자의 뜻을 쉽게 풀이해놓은 것(설명문)
	프로그램 수행에는 전혀 영향을 미치지 않음
	개발자간의 소통
	
	한줄주석 #
	여러줄주석 '''~''', """~""" Docstring가 본래 용도

2) 변수
	변수명 = 값
	변수 : 값을 저장하는 저장공간
	변수명 : 저장공간의 이름
	값을 재사용하기 위해서 사용함
	
	변수명 작성규칙
	- 띄어쓰기 불가능 
		카멜표기법
		스네이크표기법(파이썬에서 주로 사용)
		파스칼표기법(클래스선언시 사용)
	- 특수문자 사용 불가능(_ 언더바만 사용가능)
	- 숫자로 시작 불가능
	- 키워드 사용 불가능
	=> 문자로 시작, 소문자를 사용, 뜻이 있는 단어를 선택

3) 입출력 함수
	print() : 출력함수
		%연산자 
			print('%d%.1f%s%s' %(2,1.5, True, "안녕"))
		str.format() 
			print("{} {}".format(1, "안녕"))
		f-string()
			print(f"{1} {안녕}")
		end = '\n'
		sep = ' '
	
	input() : 입력함수
		사용자가 입력하는 내용이 들어감
		사용자가 입력한 값이 문자열(str)타입으로 전달됨
		다른 자료형의 값을 사용할 때는 반드시 형변환! 해야함

4) 기본자료형(DataType)
	정수형	int	양의정수, 음의정수, 0  		int()
	실수형	float	소수점이 있는 수, 0.0  		float()
	논리형	bool	참과 거짓을 의미하는 True, False 	bool()
	문자열	str	따옴표로 묶인 연속된 문자 집합의미	str()
			인덱스번호 0 마이너스인덱스 -1
			문자열의 부분집합 슬라이스 연산자([] [::])를 사용
			시퀀스 연산자 :  +(연결), *int(반복)

5) 컬렉션
	list	시퀀스 데이터 유형
		[] 대괄호로 묶인 항목 쉼표로 값들을 구분
		추가, 수정, 삭제가 언제나 가능
		append(값), insert(idx, 값) 추가
		인덱스활용 li[1] = 값 수정
		remove(값), pop(idx) 삭제
	
	tuple	시퀀스 데이터 유형
		() 소괄호로 묶인 항목 쉼표로 값들을 구분
		한 번 생성되고 나면 수정, 추가, 삭제 불가능(읽기전용 리스트)
		패킹, 언패킹
		tu1 = 1, 2, 3
		print(tu1, type(tu1)) => (1, 2, 3) <class 'tuple'>
		print(tu1[0], type(tu1[0]))

		one, two, three = tu1
		print(one, type(one)) => 1 <class 'int'>

	set	비시퀀스 자료형
		{} 중괄호로 묶인 항목, 쉼표로 구분
		순서의 개념이 없다!!!
		중복값 허용하지 않음
		추가, 삭제 가능
		add(값) 
		remove(값), pop(), discard(값)
		집합연산 : 교집합, 합집합, 차집합
		빈세트를 생성 시 : set()

	dict	비시퀀스 자료형
		해시테이블 형식, key와 value 한쌍으로 이루어진 자료형
		{key:value} 쉼표로 값들을 구분
		key가 인덱스번호처럼 사용될 수 있음 -> key 중복 불가능
		value는 중복 허용

	리스트	튜플	세트
순서	o	o	x
중복	o	o	x
추가	o	x	o

6) 연산자
	최우선연산자
	단항연산자
	산술연산자
	쉬프트연산자
	관계연산자
	논리연산자
	삼항연산자
	대입연산자

	산술연산자와 대입연산자를 함께 사용하면 복합대입연산자
	+= 	더한 뒤 대입
	-= 	뺀 뒤 대입
	*=	곱한 뒤 대입
	/=	나눈 뒤 대입
	//=	나눈 뒤 몫을 대입
	%=	나눈 뒤 나머지를 대입

7) 제어문(조건문, 반복문, 기타제어문)
(1) 제어문
	프로그래밍 언어에서 실행순서 변경
	조건에 따라서 실행해야할 문장을 변경
	특정한 문장을 반복해야할 때 사용

(2) 조건문
① if문
	- 하나의 if문이 있는 경우 조건식의 결과에 따른 하나 이상의 문이 올 수 있다
	- 조건이 참인 경우에만 실행
형식
	if 조건식:
		if문 안의문장(조건식이 참일 때 실행할 문장)
	if문밖의 문장
	(조건식이 참일 때 실행되는 문장 다음에 실행, 조건식이 거짓일 때 실행)		 
② if ~ else문
	하나의 if문에 선택적으로 else문을 사용가능
	if문의 조건식의 결과가 False일 때 else문의 문장이 실행
	조건식이 참일 때와 거짓일 때 다른 코드를 실행하려는 경우 사용함
형식
	if 조건식:
		if문 안의 문장(조건식이 참일 때 실행할 문장)
	else:
		else문 안의 문장(조건식이 거짓일 때 실행할 문장)
	if~else문 밖의 문장(if~else문의 문장 다음에 실행)

③ if ~ elif ~ else문
	하나의 if문에 다른 결과를 더 받아내야할 때 사용
형식
	if 조건식1:
		조건식1이 참일 때 실행할 문장
	elif 조건식2:
		조건식1이 거짓이고 조건식2가 참일 때 실행할 문장
	else:
		조건식1, 조건식2 모두 거짓일 때 실행할 문장

④ 중첩 if문
	하나의 if문안에서 다른 if문을 다시 사용가능
	조건이 복잡한 경우 사용
형식
	if 조건식1:
		조건식1이 참일 때 수행할 문장
		if 조건식2:
			조건식1이 참이고 조건식2도 참일 때 수행할 문장
		else:
			조건식1은 참이고 조건식2는 거짓일 때 수행할 문장
	else:
		조건식1이 거짓일 때 수행할 문장

(3) 반복문
① while문
	조건식이 참일 때 반복수행
형식
	while 조건식:
		조건식이 참인 동안 반복실행할 문장

② for문
	반복객체가 있을 때 반복수행
형식
	for 변수명 in 반복가능객체:
	#in 뒤의 반복가능객체의 값이 없을 때까지 하나씩 변수로 복사되어 반복
		반복실행할 문장
	
+) 리스트 컴프리헨션
	파이썬에서 패턴이 있는 리스트를 만들때 간단히 작성할 수 있도록 지원하는 문법
	[요소 for 문 if 문]
	해당 요소를 반복문과 if문을 적용해서 리스트에 추가해준다

(4) 기타 제어문
① break	: 반복문 즉시 탈출
② continue : 반복문의 처음으로 돌아감 아래문장은 스킵
③ pass : 아무 작업도 수행하지 않고 다음 코드로 넘어간다

8) 모듈
	파이썬 파일(.py)은 모듈이 될 수 있음
	
import 방법
	from 모듈 import 함수명
	from import *

	import 구문은 항상 제일 위에 작성

(1) 표준 모듈
	파이썬에 기본적으로 설치되어 있는 모듈
	따로 설치할 필요없이 import를 통해 사용가능
	datetime : 날짜시간
	calnedar : 달력
	time : 시간
	math : 수학
	random : 난수
	statistics : 통계
	io : 입출력

(2) 외부 모듈
	패키지 = 모듈의 상위 개념
	외부에서 만들어진 패키지를 통해 내부에 있는 모듈을 사용가능
	pip 패키지 관리자(코랩, 주피터 노트북 외에는 설치 후 진행)
	
	코랩은 import만 하면됨
	다른 개발 도구 이용시 터미널 or cmd(명령 프롬프트)에서 설치 후 import하여 사용함
	설치방법 : pip install 모듈이름
	삭제방법 : pip uninstall 모듈이름

9) 사용자 정의함수
	반복되는 코드, 행위, 기능들을 쉽게 관리하기 위해서 선언하여 사용
함수 사용 목적
	- 코드 간결화
	- 코드 재사용

형식
	#함수 정의
	def 함수명(매개변수):
		실행할 문장
		return 리턴값

	#함수 호출
	매개변수x, 반환값x
		함수명()
	매개변수o, 반환값x
		함수명(인수)
	매개변수x, 반환값o
		변수 = 함수명() 	print(변수)
		print(함수명())
	매개변수o, 반환값o
		변수 = 함수명(인수)		print(변수)
		print(함수명(인수))
















	